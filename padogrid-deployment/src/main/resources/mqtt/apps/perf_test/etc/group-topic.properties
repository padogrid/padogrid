# -------------------------------------------------------------------------
# Overview:
#
# Group test cases allow you to create and test groups of MQTT operations.
# You can think of a group as a function invoking one or more MQTT operations.
# As an example, a group could contain publish calls making a total
# of multiple MQTT topic calls. You can designate threads to invoke this
# group and measure the average latency of each group (function) call.
# -------------------------------------------------------------------------

# The number of test runs.
# Default: 1
testCount=1

# Interval between test runs in msec.
# Default: 0
testIntervalInMsec=0

# Print status interval in sec. The application prints status in this interval
# to the console.
# Default: 10 sec
printStatusIntervalInSec=10

# Turn off logging (recommended)
mqtt-addon.logging.type=none

# Group names separated by ',' or '&'. If ',', then the next group executes after
# the current group completes. If '&', then the current group and the next group
# execute concurrently. Note that testCount applies per group. For example, if
# testCount=2 and groupName=g1&g2,g3 then g1 and g2 execute concurrently twice
# before g3 executes twice.
groupNames=g1,g2

# -------------------------------------------------------------------------
# Group:
#
# A group represents a function that invokes one or more MQTT operations.
#
# name         Group name.
#
# threadCount  The number of threads per group test.
#
#              Default: (processor count * 1.5).
#
# operations  Comma separated list of operations to perform. Operations are
#             individually defined. See the "Operations" section for details.
#             The listed operations are invoked sequentially per group invocation.
#             For example, if totalInvocationCount=1000 then the operations listed
#             will be invoked 1000 times in the order they are listed.
#
# totalInvocationCount Total number of group invocations.
# 
# comment     Any text describing the group. 
# -------------------------------------------------------------------------

# g1 publishes 100,000 1 KiB objects into topic1 defined by the 'publish1' operation.
# Note that you can list more than one operation.
g1.name=Topic.publsh() Test
g1.threadCount=8
g1.operations=publish1
g1.comment=Topic.publish() test (1 KiB payload in topic1)
g1.totalInvocationCount=100000

# g2 publishes 100 10 KiB objects into topic2 defined by the 'publish2' operation.
g2.name=Topic.publsh() Test
g2.threadCount=8
g2.operations=publish2
g2.comment=Topic.publish() test (1 KiB payload in topic1)
g2.totalInvocationCount=100000

# -------------------------------------------------------------------------
# Test Cases:
#
# 'test_group' supports MqttClient.publish() only. The supported test case is 'publish'.
#
# For MqttClient.subscribe(), please use the 'subscribe_topic' command.
# -------------------------------------------------------------------------

# -------------------------------------------------------------------------
# Operations:
#
# topic | sleep
#                 Data structure name. This parameter specifies the name of the
#                 data structure pertaining to the specified test case.
#
#                 The 'sleep' operation sleeps for the specified amount of time
#                 in milliseconds. It has no other attributes. For example, 
#                 'sleep10.sleep=10', sleeps for 10 milliseconds before executing
#                 the next operation in the group.
#
# ref             The test case reference name. The defining test case inherits
#                 all values set by the referenced test case. Referenced properties
#                 are overwritten if defined.
#
# testCase        Test case.
#                 If invalid values are entered then the default value is assigned.
#
#                 Valid Test Cases: 
#                   - topic: publish    - Default:  publish
#
# payloadSize     The value object size in bytes. The value object is a blob
#                 object containing the specified payload size in the form of
#                 byte array. Note that the key objects are String objects with
#                 the prefix defined by the key.prefix property. This property is
#                 used by the following test cases only.
#
#                 Used By: publish
#                 Default: 1024
#
# totalEntryCount The total number of entries per group per test run.
#
#                 Used By: publish
#                 Default: 10000
# -------------------------------------------------------------------------

# publish1 (1 KiB)
publish1.topic=topic1
publish1.testCase=publish
publish1.payloadSize=1024

# publish2 (10 KiB)
publish2.topic=topic2
publish2.testCase=publish
publish2.payloadSize=10240
