#!/usr/bin/env bash 

# ========================================================================
# Copyright (c) 2020-2024 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-product -docker -port -cluster -prefix -count -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

PRODUCT_OPTIONS=$(echo "$DOCKER_PRODUCT_LIST" | sed 's/ /|/g')
PRODUCTS_SUPPORTED=$(echo "$DOCKER_PRODUCT_LIST" | sed 's/ /, /g')
THIS_PRODUCT="$(basename $(dirname $SCRIPT_DIR))"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Create a Docker environment in the current workspace

SYNOPSIS
   $EXECUTABLE [-product $PRODUCT_OPTIONS] [-prefix hostname_prefix] [-port first_port_number] [-count member_count] -cluster cluster_name [-?]

DESCRIPTION
   Creates a Docker environment that includes Mosquitto cluster configuration files for
   one of the following Docker tools:
 
   compose  docker-compose Dockfile based cluster orchestration

   Make sure your Docker version includes support for 'docker compose'.

   This command generates the 'docker-compose.yaml' file configured with the current workspace's
   PadoGrid version. If the product versions cannot be determined then it defaults to the
   'latest' tag.

OPTIONS
   -product $PRODUCT_OPTIONS
             Docker cluster product name. Supported products are $PRODUCTS_SUPPORTED.

   -docker compose
             Docker compose driven Hazelcast cluster.

   -prefix hostname_prefix
             Host name prefix. Each container's hostname begins with this prefix followed
             by a sequenced number starting from 1. If this option is not specified, then
             'broker' is used for prefix.
             Default: broker

   -port first_port_number
             First member's exposed port number. Port number is incremented
             starting from this port number for the subsquent members.
             Default: 1883

   -count member_count
             Number of members (servers) in the cluster. Default: 3

   -cluster cluster_name
             Required Mosquitto cluster name. This name is used to create a Docker compose project.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -product $THIS_PRODUCT -docker $DEFAULT_DOCKER -port $DEFAULT_MEMBER_START_PORT -prefix broker -cluster cluster_name

EXAMPLES
   To create 'mydocker' cluster with the member (server) count of 3:
      $EXECUTABLE -cluster mydocker

   To create 'mydocker' cluster with the member (server) count of 5:
      $EXECUTABLE -cluster mydocker -count 5

FILES
   $PADOGRID_WORKSPACE/docker
             The current workspace Docker directory.

EOF
fi
   exit
fi

#
# Run the target docker command if the product is different.
#
if [ "$PRODUCT_ARG" != "" ]; then
   if [ "$(containsWord "$DOCKER_PRODUCT_LIST" "$PRODUCT_ARG")" == "false" ]; then
      >&2 echo -e "${CLightRed}ERROR:${CNone} Specified product is not supported: [$PRODUCT_ARG]. Command aborted."
      exit 1
   fi
   if [ "$THIS_PRODUCT" != "$PRODUCT_ARG" ] && [ "$PRODUCT_ARG" != "jet" ]; then
      $PADOGRID_HOME/$PRODUCT_ARG/bin_sh/$EXECUTABLE "$@"
      exit
   fi
fi
CLUSTER_TYPE="mosquitto"

if [ "$CLUSTER_SPECIFIED" == "false" ]; then
   >&2 echo "ERROR: The -cluster option is not specified. Command aborted."
   exit 1
fi

if [ "$DOCKER" == "" ]; then
   DOCKER=$DEFAULT_DOCKER
fi
if [ "$DOCKER" != "compose" ]; then
   >&2 echo "ERROR: Unsupported Docker tool [$DOCKER]. Please use the '-?' option to see the usage. Command aborted."
   exit 1
fi
if [ "$COUNT" == "" ]; then
   COUNT=3
fi
if [ $COUNT -lt 1 ]; then
   >&2 echo "ERROR: Inalid count [$COUNT]. Member (server) count cannot be less than 1. Command aborted."
   exit 1
fi

#
# docker directory
#
DOCKER_DIR=$PADOGRID_WORKSPACE/docker
CLUSTER_DIR=$DOCKER_DIR/$CLUSTER

if [ -d $CLUSTER_DIR ]; then
   >&2 echo "ERROR: The specified Docker cluster exists. Command aborted."
   exit
fi

if [ "$PREFIX" == "" ]; then
   PREFIX="broker"
fi
   
if [ ! -d $CLUSTER_DIR ]; then
   mkdir -p $CLUSTER_DIR
fi

if [ "$DOCKER" == "compose" ]; then

   ETC_DIR=$CLUSTER_DIR/padogrid/etc
   DOCKER_DOC="README.md"
   mkdir -p $ETC_DIR

   # Copy Docker doc and client config files
   cp -rf $BASE_DIR/docker/compose/$DOCKER_DOC $CLUSTER_DIR
   cp $BASE_DIR/docker/compose/mqttv5-client.yaml $ETC_DIR/mqttv5-client.yaml
   cp $BASE_DIR/docker/compose/simulator.yaml $ETC_DIR/simulator.yaml

   # Update .env file
   if [ "$PORT_ARG" != "" ]; then
      START_PORT=$PORT_ARG
   else
      START_PORT=$DEFAULT_MEMBER_START_PORT
   fi
   let END_PORT=START_PORT+COUNT-1
   SERVER_URIS="tcp:\\/\\/localhost:$START_PORT-$END_PORT"
   sed -e "s/\${CLUSTER_NAME}/$CLUSTER/g" \
       $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-env > $CLUSTER_DIR/.env
   sed -e "s/\${SERVER_URIS}/$SERVER_URIS/g" \
       $BASE_DIR/docker/compose/template-mqttv5-client.yaml > $ETC_DIR/mqttv5-client.yaml

   # Create docker-compose.yaml
   cp $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-docker-compose.yaml $CLUSTER_DIR/docker-compose.yaml
   
   # Append server services to docker-compose.yaml
   IMAGE_NAME="padogrid-mqtt"
   HOST_SERVER_PORT=$START_PORT
   WORKSPACE_NAME=$(basename "$PADOGRID_WORKSPACE")

   # The base Padogrid version for container is 0.9.26.
   if [ $PADOGRID_MAJOR_VERSION_NUMBER -eq 0 ] && [ $PADOGRID_MINOR_VERSION_NUMBER -eq 9 ] && [ $PADOGRID_UPDATE_VERSION_NUMBER -lt 26 ]; then
      PADOGRID_VERSION="0.9.26"
   else
      if [[ "$PADOGRID_VERSION" == *"-SNAPSHOT" ]]; then
         let PADOGRID_UPDATE_VERSION_NUMBER=PADOGRID_UPDATE_VERSION_NUMBER-1
         PADOGRID_VERSION=$PADOGRID_MAJOR_VERSION_NUMBER.$PADOGRID_MINOR_VERSION_NUMBER.$PADOGRID_UPDATE_VERSION_NUMBER
      fi
   fi

   for i in $(seq 1 $COUNT); do   
      SERVER_NAME="$PREFIX$i"
      sed -e "s/\${SERVER_NAME}/$SERVER_NAME/g" \
          -e "s/\${VERSION}/$PADOGRID_VERSION/g" \
          -e "s/\${IMAGE_NAME}/$IMAGE_NAME/g" \
          -e "s/\${CLUSTER_NAME}/$CLUSTER/g" \
          -e "s/\${HOST_SERVER_PORT}/$HOST_SERVER_PORT/g" \
          $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-server-docker-compose.yaml >> $CLUSTER_DIR/docker-compose.yaml
      let HOST_SERVER_PORT=HOST_SERVER_PORT+1
   done
fi

# Set group permissions for workspace owner
if [ "$GROUP_PERMISSIONS_ENABLED" == "true" ]; then
   chmod -R g+rw,o-rwx $CLUSTER_DIR
fi

#
# Display DOCKER Environment
#
echo ""
echo "         WORKSPACE: $PADOGRID_WORKSPACE"
echo -e "           Product: ${CLightGreen}$CLUSTER_TYPE${CNone}"
echo "            Docker: $DOCKER"
echo "      Member Count: $COUNT"
echo "Docker Environment:"
echo "   $CLUSTER_DIR"

cat <<EOF

$CLUSTER
$TTee .env
$TTee README.md
$TTee docker-compose.yaml
$TLel padogrid
    $TLel etc
        $TTee mqtt5-client.yaml
        $TLel simulator.yaml

EOF
echo -e "Please follow the instructions in the ${CLightGreen}$DOCKER_DOC${CNone} document."
echo -e "  - Change environment variables in the ${CLightGreen}.env${CNone} file as needed."
echo -e "  - Configure servers (members) as needed in the ${CLightGreen}docker-compose.yaml${CNone} file as needed."
echo "To start Docker cluster:"
echo -e "   ${CLightGreen}cd_docker $CLUSTER${CNone}"
echo -e "   ${CLightGreen}docker-compose up${CNone}"
echo ""

