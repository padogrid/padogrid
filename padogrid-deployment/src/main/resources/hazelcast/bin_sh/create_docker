#!/usr/bin/env bash 

# ========================================================================
# Copyright (c) 2020-2024 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-product -docker -host -port -cluster -count -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

# Get the host IP. Last IPv4 in the list.
for i in $(getHostIPv4List); do
   HOST_IP=$i
done

PRODUCT_OPTIONS=$(echo "$DOCKER_PRODUCT_LIST" | sed 's/ /|/g')
PRODUCTS_SUPPORTED=$(echo "$DOCKER_PRODUCT_LIST" | sed 's/ /, /g')
THIS_PRODUCT="$(basename $(dirname $SCRIPT_DIR))"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Create a Docker environment in the current workspace

SYNOPSIS
   $EXECUTABLE [-product $PRODUCT_OPTIONS]
                 [-host host_ip] [-port first_port_number]
                 [-count member_count] -cluster cluster_name [-?]

DESCRIPTION
   Creates a Docker environment that includes Hazelcast cluster configuration files for
   one of the following Docker tools:
 
   compose  docker-compose Dockfile based cluster orchestration

   Make sure your Docker version includes support for 'docker compose'.

   This command generates the 'docker-compose.yaml' file configured with the current workspace's
   product versions. If the product versions cannot be determined then it defaults to the
   'latest' tag.

OPTIONS
   -product $PRODUCT_OPTIONS
             Docker cluster product name. Supported products are $PRODUCTS_SUPPORTED.

   -docker compose
             Docker compose driven Hazelcast cluster.

   -host host_ip
             Host IP address that is acccessible from the Docker containers. If this option
             is not specified then the IP address of the host name is assigned. If the host
             is running Docker Desktop, then you may specify the the host name, host.docker.internal,
             which resolves to the internal IP address used by the host. Note that host.docker.internal
             is for development only and not for production.

   -port first_port_number
             First member's port number. Port number is incremented
             starting from this port number for the subsquent members.
             Default: 5701

   -count member_count
             Number of members (servers) in the cluster. Default: 2

   -cluster cluster_name
             Required Hazelcast cluster name. This name is used to create a Docker compose project,
             for example.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -product $THIS_PRODUCT -docker $DEFAULT_DOCKER -host $HOST_IP -port $DEFAULT_MEMBER_START_PORT -cluster cluster_name

EXAMPLES
   To create 'mydocker' cluster with the host IP 'host.docker.internal':
      $EXECUTABLE -host host.docker.internal -cluster mydocker

   To create 'mydocker' cluster with the host IP '$HOST_IP' and member (server) count of 4:
      $EXECUTABLE -host $HOST_IP -cluster mydocker -count 4

   To create 'mydocker' cluster with the host IP '$HOST_IP':
      $EXECUTABLE -host $HOST_IP -cluster mydocker

FILES
   $PADOGRID_WORKSPACE/docker
             The current workspace Docker directory.

EOF
fi
   exit
fi

#
# Run the target docker command if the product is different.
#
if [ "$PRODUCT_ARG" != "" ]; then
   if [ "$(containsWord "$DOCKER_PRODUCT_LIST" "$PRODUCT_ARG")" == "false" ]; then
      >&2 echo -e "${CLightRed}ERROR:${CNone} Specified product is not supported: [$PRODUCT_ARG]. Command aborted."
      exit 1
   fi
   if [ "$THIS_PRODUCT" != "$PRODUCT_ARG" ]; then
      $PADOGRID_HOME/$PRODUCT_ARG/bin_sh/$EXECUTABLE "$@"
      exit
   fi
   CLUSTER_TYPE="imdg"
else
   # Default product is hazelcast and hence CLUSTER_TYPE is "imdg"
   CLUSTER_TYPE="imdg"
fi

if [ "$CLUSTER_SPECIFIED" == "false" ]; then
   >&2 echo "ERROR: The -cluster option is not specified. Command aborted."
   exit 1
fi

if [ "$DOCKER" == "" ]; then
   DOCKER=$DEFAULT_DOCKER
fi
if [ "$DOCKER" != "compose" ]; then
   >&2 echo "ERROR: Unsupported Docker tool [$DOCKER]. Please use the '-?' option to see the usage. Command aborted."
   exit 1
fi
if [ "$COUNT" == "" ]; then
   COUNT=2
fi
if [ $COUNT -lt 1 ]; then
   >&2 echo "ERROR: Inalid count [$COUNT]. Member (server) count cannot be less than 1. Command aborted."
   exit 1
fi

if [ "$HOST" != "" ]; then
   HOST_IP=$HOST
fi

#
# docker directory
#
DOCKER_DIR=$PADOGRID_WORKSPACE/docker
CLUSTER_DIR=$DOCKER_DIR/$CLUSTER

if [ -d $CLUSTER_DIR ]; then
   >&2 echo "ERROR: The specified Docker cluster exists. Command aborted."
   exit
fi
   
if [ ! -d $CLUSTER_DIR ]; then
   mkdir -p $CLUSTER_DIR
fi

if [ "$HAZELCAST_VERSION" == "" ]; then
   HAZELCAST_VERSION="latest"
   HAZELCAST_MAJOR_VERSION_NUMBER=$DEFAULT_HAZELCAST_MAJOR_VERSION_NUMBER
   HAZELCAST_MC_VERSION=""
fi

if [ "$DOCKER" == "compose" ]; then

   ETC_DIR=$CLUSTER_DIR/padogrid/etc
   LIB_DIR=$CLUSTER_DIR/padogrid/lib
   PLUGINS_DIR=$CLUSTER_DIR/padogrid/plugins
   DOCKER_DOC="README.md"
   mkdir -p $ETC_DIR
   mkdir -p $LIB_DIR
   mkdir -p $PLUGINS_DIR

   # Copy Docker doc
   cp -rf $BASE_DIR/docker/compose/$DOCKER_DOC $CLUSTER_DIR
   cp -rf $BASE_DIR/docker/compose/images $CLUSTER_DIR
   # Copy the template hazelcast.xml file
   cp $BASE_DIR/etc/template-hazelcast-$HAZELCAST_MAJOR_VERSION_NUMBER.xml $ETC_DIR/hazelcast.xml
   # Copy the template log4j2.properties file
   cp $BASE_DIR/etc/template-log4j2.properties $ETC_DIR/log4j2.properties
   # Copy the template prometheus config file
   cp $BASE_DIR/etc/template-prometheus.yml $ETC_DIR/prometheus.yml
   # Copy the template hibernate config file
   cp $BASE_DIR/etc/template-hibernate.cfg-mysql.xml $ETC_DIR/hibernate.cfg-mysql.xml
   cp $BASE_DIR/etc/template-hibernate.cfg-postgresql.xml $ETC_DIR/hibernate.cfg-postgresql.xml

   # Copy binary files
   cp $PADOGRID_HOME/lib/*.jar $LIB_DIR/ > /dev/null 2>&1
   cp $BASE_DIR/lib/*.jar $LIB_DIR/ > /dev/null 2>&1
   cp -r $BASE_DIR/lib/v$HAZELCAST_MAJOR_VERSION_NUMBER/* $LIB_DIR/
   cp -r $BASE_DIR/plugins/*.jar $PLUGINS_DIR/ > /dev/null 2>&1
   cp -r $BASE_DIR/plugins/v$HAZELCAST_MAJOR_VERSION_NUMBER/* $PLUGINS_DIR/

   # Update .env file
   if [ "$PORT_ARG" != "" ]; then
      START_PORT=$PORT_ARG
   else
      START_PORT=$DEFAULT_MEMBER_START_PORT
   fi
   SERVER_PORT=$START_PORT
   TCP_MEMBERS=""
   for i in $(seq 1 $COUNT); do   
      if [ $i -gt 1 ]; then
         TCP_MEMBERS="$TCP_MEMBERS,"
      fi
      TCP_MEMBERS="${TCP_MEMBERS}$HOST_IP:$SERVER_PORT"
      let SERVER_PORT=SERVER_PORT+1
   done
   if [ "$MC_LICENSE_KEY" == "" ]; then
      MC_LICENSE_KEY="$HZ_LICENSE_KEY"
   fi
   sed -e "s/\${HOSTNAME_FOR_CLIENTS}/$HOST_IP/g" \
       -e "s/\${CLUSTER_NAME}/$CLUSTER/g" \
       -e "s/\${TCP_MEMBERS}/$TCP_MEMBERS/g" \
       -e "s/\${HZ_LICENSE_KEY}/$IMDG_LICENSE_KEY/g" \
       -e "s/\${MC_LICENSE_KEY}/$MC_LICENSE_KEY/g" \
       $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-env > $CLUSTER_DIR/.env

   # Update docker-compose.yaml
   MC_VERSION="$HAZELCAST_MC_VERSION"
   if [ "$MC_VERSION" == "" ]; then
      MC_VERSION="latest"
   fi
   sed -e "s/\${VERSION}/$HAZELCAST_VERSION/g" -e "s/\${MC_VERSION}/$MC_VERSION/g" $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-docker-compose.yaml > $CLUSTER_DIR/docker-compose.yaml

   # Append server services to docker-compose.yaml
   if [ "$IS_HAZELCAST_ENTERPRISE" == "true" ]; then
      IMAGE_NAME="hazelcast-enterprise"
   else
      IMAGE_NAME="hazelcast"
   fi
   HOST_SERVER_PORT=$START_PORT
   HOST_JMX_PORT=10991
   HOST_DEBUG_PORT=9101
   WORKSPACE_NAME=$(basename "$PADOGRID_WORKSPACE")
   for i in $(seq 1 $COUNT); do   
      SERVER_NAME="server$i"
      sed -e "s/\${SERVER_NAME}/$SERVER_NAME/g" \
          -e "s/\${VERSION}/$HAZELCAST_VERSION/g" \
          -e "s/\${IMAGE_NAME}/$IMAGE_NAME/g" \
          -e "s/\${WORKSPACE_NAME}/$WORKSPACE_NAME/g" \
          -e "s/\${CLUSTER_NAME}/$CLUSTER/g" \
          -e "s/\${HOST_SERVER_PORT}/$HOST_SERVER_PORT/g" \
          -e "s/\${HOST_JMX_PORT}/$HOST_JMX_PORT/g" \
          -e "s/\${HOST_DEBUG_PORT}/$HOST_DEBUG_PORT/g" \
          $BASE_DIR/docker/compose/template-$CLUSTER_TYPE-server-docker-compose.yaml >> $CLUSTER_DIR/docker-compose.yaml
      let HOST_SERVER_PORT=HOST_SERVER_PORT+1
      let HOST_JMX_PORT=HOST_JMX_PORT+1
      let HOST_DEBUG_PORT=HOST_DEBUG_PORT+1
   done
fi

# Set group permissions for workspace owner
if [ "$GROUP_PERMISSIONS_ENABLED" == "true" ]; then
   chmod -R g+rw,o-rwx $CLUSTER_DIR
fi

#
# Display DOCKER Environment
#
echo ""
echo "         WORKSPACE: $PADOGRID_WORKSPACE"
echo -e "           Product: ${CLightGreen}$CLUSTER_TYPE${CNone}"
echo "            Docker: $DOCKER"
echo "      Member Count: $COUNT"
echo "Docker Environment:"
echo "   $CLUSTER_DIR"

cat <<EOF

$CLUSTER
$TTee .env
$TTee README.md
$TTee images
$TTee docker-compose.yaml
$TLel padogrid
    $TTee etc
    $TTee lib
    $TLel plugins

EOF
echo -e "Please follow the instructions in the ${CLightGreen}$DOCKER_DOC${CNone} document."
echo -e "  - Change environment variables in the ${CLightGreen}.env${CNone} file as needed."
echo -e "  - Configure locator(s) and servers (members) as needed in the ${CLightGreen}docker-compose.yaml${CNone} file as needed."
echo "To start Docker cluster:"
echo -e "   ${CLightGreen}cd_docker $CLUSTER${CNone}"
echo -e "   ${CLightGreen}docker-compose up${CNone}"
echo ""

