#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2025 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

# Dashboard folder name in Grafana. The output file should be imported to this folder.
FOLDER_NAME="GemFireTemplates"
OUTPUT_DIR="$APP_DIR/templates/$FOLDER_NAME"

# The template file
TEMPLATE_FILE="$OUTPUT_DIR/Template Category Tables.json"
# The file to generate
OUTPUT_FILE="$OUTPUT_DIR/GemFire Category Tables.json"

# Max values of metrics in each member. These categories typically contains many metrics such
# as region metrics per member. Since there are
MAX_CATEGORY_LIST="DiskRegionStatistics McPartitionedRegionStats PartitionedRegionStats"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   ./$EXECUTABLE - Execute all "generate_" scripts execept this script.

SYNOPSIS
   ./$EXECUTABLE [-?]

DESCRIPTION
   Executes all "generate_" scripts except this script in this directory.

DEFAULT
   ./$EXECUTABLE

SEE ALSO
   generate_category_tables, generate_noncategory_tables, generate_replicated_region_tables,
   generate_category_region_tables, generate_member_region_tables, generate_partitioned_region_tables

EOF
exit
fi

for script in generate_*; do
   if [ "$script" != "$EXECUTABLE" ]; then
      echo "./$script"
      ./$script
   fi
done
