#!/usr/bin/env bash

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

BASE_DIR="$(dirname "$SCRIPT_DIR")"

EXECUTABLE="`basename $0`"

__options()
{
   echo "-?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Display membership service failure and restarted messages from locators

SYNOPSIS
   $EXECUTABLE [-?]

DESCRIPTION
   Displays membership service failure and restarted messages from locators. The membership service
   failures typically lead to restarting locators. It can take over 10 minutes before the locators
   restart and become available.

EOF
exit
fi

if [ "$TIMESTAMP" == "" ]; then
   TIMESTAMP=`date +%y%m%d-%H%M%S`
fi

# Trap Ctrl-C
LAST_TIMESTAMP_TRAP=0
trap 'cleanExit "$EXECUTABLE" "$TIMESTAMP" "false"' INT

TMP_FILE="/tmp/padogrid-$EXECUTABLE-$TIMESTAMP.log"
pushd $LOG_DIR > /dev/null 2>&1
grep -E "Membership service failure|system restarted" $LOCATOR_FILES > $TMP_FILE
echo ""
echo "Member service failure"
echo "----------------------"
prev_log_file=""
while IFS= read -r line; do
  members=""
  log_file=$(echo $line | sed 's/:.*$//')
  timestamp=$(echo $line | sed -e "s/$log_file://" -e 's/^.*info //' -e "s/$CLUSTER.*$//"  -e 's/info.*//i')
  if [[ "$line" == *"system restarted"* ]]; then
     message="system restarted"
     CColor=$CGo
  else
     message=$(echo $line | sed 's/^.*Membership service failure/Membership service failure/')
     members=$(echo $message | sed -e 's/^.*\[//' -e 's/\]//')
     CColor=$CError
  fi
  if [ "$prev_log_file" != "$log_file" ]; then
     echo "$log_file"
     prev_log_file=$log_file
  fi
  echo "$TTee $timestamp"
  if [ "$members" != "$message" ]; then
     message=$(echo $message | sed -e 's/\[.*$//' -e 's/,//')
     echo -e "$TBar   $TLel ${CColor}$message${CNone}"
     count=0
     for i in $members; do
        let count=count+1
     done
     total=$count
     count=0
     for i in $members; do
        i=$(echo $i | sed 's/,//')
        let count=count+1
        if [ $count -lt $total ]; then
           echo -e "$TBar       $TTee $i"
        else
           echo -e "$TBar       $TLel $i"
        fi
     done
  else
     message=$(echo $message | sed -e 's/\[.*$//' -e 's/,//')
     echo -e "$TBar   $TLel ${CColor}$message${CNone}"
  fi
done < "$TMP_FILE"
unset IFS
popd > /dev/null 2>&1

echo -e "Now: ${CBrownOrange}$(date '+%Y/%m/%d %H:%M:%S %Z')${CNone}"
echo ""

cleanExit "$EXECUTABLE" "$TIMESTAMP" "true"
