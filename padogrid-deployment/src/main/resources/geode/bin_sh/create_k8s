#!/usr/bin/env bash 

# ========================================================================
# Copyright (c) 2020-2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-product -k8s -cluster -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

PRODUCT_OPTIONS=$(echo "$K8S_PRODUCT_LIST" | sed 's/ /|/g')
PRODUCTS_SUPPORTED=$(echo "$K8S_PRODUCT_LIST" | sed 's/ /, /g')
THIS_PRODUCT="$(basename $(dirname $SCRIPT_DIR))"
K8S_OPTIONS="$(echo $(getK8sOptions $THIS_PRODUCT) | sed 's/ /|/g')"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Create a Kubernetes environment in the current workspace

SYNOPSIS
   $EXECUTABLE [-product $PRODUCT_OPTIONS]
              [-k8s $K8S_OPTIONS]
              -cluster cluster_name
              [-?]

DESCRIPTION
   Creates a Kubernetes environment that includes Geode deployment files for
   one of the following cloud platforms:
 
   minikube  Minikube on your laptop or PC

   To use the created environment, you must have access to one of the platforms
   with all the required software installed and a valid account. Each environment
   comes with a document describing the prerequisites and detailed instructions.

OPTIONS
   -product $PRODUCT_OPTIONS
             Kubernetes cluster product name. Supported products are $PRODUCTS_SUPPORTED.

   -k8s minikube
             Minikube on your local machine.

   -cluster cluster_name
             Required Kubernetes cluster name. This name is used to create a cluster in
             the cloud platform if it does not exist.

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -product $THIS_PRODUCT -k8s $DEFAULT_K8S -cluster cluster_name

FILES
   $PADOGRID_WORKSPACE/k8s
             The current workspace Kubernetes directory.

EOF
fi
   exit
fi

#
# Run the target k8s command if the product is different.
#
if [ "$PRODUCT_ARG" != "" ]; then
   if [ "$(containsWord "$K8S_PRODUCT_LIST" "$PRODUCT_ARG")" == "false" ]; then
      >&2 echo -e "${CLightRed}ERROR:${CNone} Specified product is not supported: [$PRODUCT_ARG]. Command aborted."
      exit 1
   fi
   if [ "$THIS_PRODUCT" != "$PRODUCT_ARG" ]; then
      if [ "$PRODUCT_ARG" == "jet" ]; then
         PRODUCT_ARG="hazelcast"
      fi
      $PADOGRID_HOME/$PRODUCT_ARG/bin_sh/$EXECUTABLE "$@"
      exit
   fi
fi

if [ "$CLUSTER_SPECIFIED" == "false" ]; then
   >&2 echo "ERROR: The -cluster option is not specified. Command aborted."
   exit
fi

if [ "$K8S" == "" ]; then
   K8S=$DEFAULT_K8S
fi
if [ "$K8S" != "minikube" ]; then
   >&2 echo "ERROR: Unsupported Kubernetes cloud platform. Please use the '-?' option"
   >&2 echo "       to see the usage. Command aborted."
   exit
fi

#
# k8s directory
#
K8S_DIR=$PADOGRID_WORKSPACE/k8s
CLUSTER_DIR=$K8S_DIR/$CLUSTER

if [ -d $CLUSTER_DIR ]; then
   >&2 echo "ERROR: The specified Kubernetes cluster exists. Command aborted."
   exit
fi
   

if [ ! -d $CLUSTER_DIR ]; then
   mkdir -p $CLUSTER_DIR
fi

create_setenv_file()
{
  echo "#" > $SETENV_FILE
  echo "# Enter app specifics in this file." >> $SETENV_FILE
  echo "#" >> $SETENV_FILE
  echo "" >> $SETENV_FILE
  echo "# Cluster level variables:" >> $SETENV_FILE
  echo "# ------------------------" >> $SETENV_FILE
  echo "# BASE_DIR - padogrid base dir" >> $SETENV_FILE
  echo "# ETC_DIR - Cluster etc dir" >> $SETENV_FILE
  echo "" >> $SETENV_FILE
  echo "# App level variables:" >> $SETENV_FILE
  echo "# --------------------" >> $SETENV_FILE
  echo "# APPS_DIR - <padogrid>/apps dir" >> $SETENV_FILE
  echo "# APP_DIR - App base dir" >> $SETENV_FILE
  echo "# APP_ETC_DIR - App etc dir" >> $SETENV_FILE
}

SETENV_FILE="$CLUSTER_DIR/bin_sh/setenv.sh"

if [ "$K8S" == "minikube" ]; then

  K8S_DOC="README-Minikube.md"
  cp -rf $BASE_DIR/k8s/kustom/bin_sh $CLUSTER_DIR
  cp -rf $BASE_DIR/k8s/kustom/etc $CLUSTER_DIR
  cp -rf $BASE_DIR/k8s/kustom/README-Minikube.md $CLUSTER_DIR
  create_setenv_file
  echo "" >> $SETENV_FILE
  echo "#" >> $SETENV_FILE
  echo "# Follow the instructions in $K8S_DOC using the following" >> $SETENV_FILE
  echo "# environment variable." >> $SETENV_FILE
  echo "#" >> $SETENV_FILE
  echo "export GEODE_KUSTOM_DIR=\$PADOGRID_WORKSPACE/k8s/$CLUSTER" >> $SETENV_FILE

elif [ "$K8S" == "gke" ]; then

  K8S_DOC="README-GKE.md"
  cp -rf $BASE_DIR/k8s/kustom/bin_sh $CLUSTER_DIR
  cp -rf $BASE_DIR/k8s/kustom/etc $CLUSTER_DIR
  cp -rf $BASE_DIR/k8s/kustom/README-GKE.md $CLUSTER_DIR
  rm -r $CLUSTER_DIR/etc/padogrid/storage/minikube
  rm $CLUSTER_DIR/bin_sh/setenv.sh
  create_setenv_file
  echo "" >> $SETENV_FILE
  echo "#" >> $SETENV_FILE
  echo "# Set the following variables with your values and follow the instructions" >> $SETENV_FILE
  echo "# in $K8S_DOC. Note that you would need to create a GKE cluster" >> $SETENV_FILE
  echo "# first before you can set INSTANCE_NAME." >> $SETENV_FILE
  echo "#" >> $SETENV_FILE
  echo "export GEODE_KUSTOM_DIR=\$PADOGRID_WORKSPACE/k8s/$CLUSTER" >> $SETENV_FILE
  echo "export CLUSTER_NAME=$CLUSTER" >> $SETENV_FILE
  echo "export GCR_HOSTNAME=gcr.io" >> $SETENV_FILE
  echo "export PROJECT_ID=my-project" >> $SETENV_FILE
  echo "export REGION=us-east1" >> $SETENV_FILE
  echo "export ZONE=us-east1-b" >> $SETENV_FILE
  echo "export INSTANCE_NAME=gke-kustomize-test-default-pool-c82eb23e-bzft" >> $SETENV_FILE

fi

# Set group permissions for workspace owner
if [ "$GROUP_PERMISSIONS_ENABLED" == "true" ]; then
   chmod -R g+rw,o-rwx $CLUSTER_DIR
fi

#
# Display K8S Environment
#
echo ""
echo "     WORKSPACE: $PADOGRID_WORKSPACE"
echo -e "       Product: ${CGo}geode${CNone}"
echo "    Kubernetes: $K8S"
echo "Kubernetes Environment:"
echo "   $CLUSTER_DIR"
echo ""
echo "Please follow the instructions in the $K8S_DOC document in the"
echo "above directory."
echo ""
echo "To change directory to the K8S cluster:"
echo ""
echo -e "   ${CGo}cd_k8s ${CLUSTER}${CNone}"
echo ""
