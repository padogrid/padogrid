#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2013-2023 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh > /dev/null

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
   echo ""
   echo "Usage:"
   echo "   $EXECUTABLE -refid <mkpath refid> [-grid <gridId>] [-site <site>] [-?]"
   echo ""
   echo "   Generates a PadoShell script file in the script directory for creating grid paths"
   echo "   specified in all of the schema files found in the schema directory. By default,"
   echo "   it configures each grid path as temporal-lucene. It prompts if the specified script"
   echo "   file exists."
   echo ""
   echo "      -refid   The '-refid' option of the PadoShell mkpath command."
   echo "      -grid     Grid in which the grid paths to be created. Default: $GRID_DEFAULT"
   echo "      -site     Site in which the grid paths to be created. Default: $SITE_DEFAULT"
   echo ""
   echo "   Default: $EXECUTABLE -refid .. -grid $GRID_DEFAULT -site $SITE_DEFAULT"
   echo ""
   exit
fi

# Exit if the refid is not specified.
if [ "$REFID" == "" ]; then
   echo "Error: -refid is not specified."
   echo; exit
fi

SCHEMA_DIR=$PADO_HOME/data/schema
OUTPUT_FILE_NAME=mkpath_schema_${GRID}_${SITE}.pado
OUTPUT_FILE=$PADO_HOME/script/$OUTPUT_FILE_NAME

# Prompt if the output file already exists.
if [ -f $OUTPUT_FILE ]; then
   echo "File exists: $OUTPUT_FILE"
   read -p "Do you want to continue? ('c' to continue, any other key to quit): " INPUT
   if [ "$INPUT" != "c" ]; then
      echo "Aborted."; echo ""; exit
   fi
fi

# Write header
TEMPORAL_TYPE=-temporalLucene
TIMESTAMP=`date +"%Y-%m-%d %H:%M:%S"`
echo "# Generated: $TIMESTAMP" > $OUTPUT_FILE
echo "#" >> $OUTPUT_FILE
echo "# This script has been generated by bin_sh/tools/generate_mkpath_schema for quickly" >> $OUTPUT_FILE
echo "# creating grid paths defined in schema files during runtime." >> $OUTPUT_FILE
echo "#" >> $OUTPUT_FILE
echo "# Usage: ./pado -dir .. -f script/mkpath_schema_mygrid_us.pado" >> $OUTPUT_FILE
echo "#" >> $OUTPUT_FILE
echo "# IMPORTANT:" >> $OUTPUT_FILE
echo "#    PadoShell scripting allows you to conveniently create dynamic grid paths." >> $OUTPUT_FILE
echo "#    However, for permanent grid paths, it is recommended that you configure them" >> $OUTPUT_FILE
echo "#    in pado.xml instead." >> $OUTPUT_FILE
echo "" >> $OUTPUT_FILE
echo "# Login to grid. Note that this might fail if authentication is enabled." >> $OUTPUT_FILE
echo "login -l $LOCATORS" >> $OUTPUT_FILE
echo "" >> $OUTPUT_FILE

# Add mkpath commands
echo "# Add mkpath commands" >> $OUTPUT_FILE
IFS_BEFORE=$IFS
IFS=$(echo -en "\n\b")
for i in $SCHEMA_DIR/*.schema; do
   TMP=`grep "GridPath=" "$i"`
   GRID_PATH=${TMP#GridPath=} 
   if [ "$GRID_PATH" != "" ]; then
      echo "mkpath -p -refid $REFID $TEMPORAL_TYPE $GRID_PATH" >> $OUTPUT_FILE
   fi
done

# Reset temporal to rebuild indexes.
# This is required if the paths are persistent due to GemFire limitations.
echo "" >> $OUTPUT_FILE
echo "# Reset temporal to rebuild indexes." >> $OUTPUT_FILE
echo "# This is required if the paths are persistent due to GemFire limitations." >> $OUTPUT_FILE
for i in $SCHEMA_DIR/*.schema; do
   TMP=`grep "GridPath=" "$i"`
   GRID_PATH=${TMP#GridPath=} 
   if [ "$GRID_PATH" != "" ]; then
      echo "temporal -disable $GRID_PATH" >> $OUTPUT_FILE
      echo "temporal -enable $GRID_PATH" >> $OUTPUT_FILE
   fi
done
IFS=$IFS_BEFORE

echo
echo "File created: $OUTPUT_FILE"
echo "       Usage: cd $PADO_HOME/bin_sh; ./pado -dir .. -f script/$OUTPUT_FILE_NAME"
echo

