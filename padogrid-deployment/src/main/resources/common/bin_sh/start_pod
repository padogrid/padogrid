#!/usr/bin/env bash
  
# ========================================================================
# Copyright (c) 2020 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-pod -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Start the specified pod in the current workspace

SYNOPSIS
   $EXECUTABLE -pod pod_name [-?]

DESCRIPTION
   Starts the specified pod by executing the Vagrant 'up' command.

OPTIONS
   -pod pod_name
             Pod name. If not specified, then it starts the current pod.

DEFAULT
   $EXECUTABLE -pod pod_name

SEE ALSO
EOF
   printSeeAlsoList "*pod*" $EXECUTABLE
   exit
fi

POD_TYPE=`getPodProperty "pod.type" $POD_TYPE`
OS_ENV=`getOsEnv`

if [[ $OS_ENV == *g ]]; then
   echo >&2 "----------------------------------------------------------------"
   echo >&2 "WORKSPACE: $PADOGRID_WORKSPACE"
   echo >&2 "    ERROR: Guest OS is not allowed to start pods. Please run this command from the host OS."
   echo >&2 "           Command aborted."
   echo >&2 "----------------------------------------------------------------"
   exit 1
fi

if  [ ! -d $POD_DIR ]; then
   echo >&2 "----------------------------------------------------------------"
   echo >&2 "WORKSPACE: $PADOGRID_WORKSPACE"
   echo >&2 "    ERROR: This pod does not exist [$POD]. Command aborted."
   echo >&2 "----------------------------------------------------------------"
   exit 1
fi

# Bring up Vagrant
pushd $POD_DIR > /dev/null 2>&1
vagrant up
popd > /dev/null 2>&1
