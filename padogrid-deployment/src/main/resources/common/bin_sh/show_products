#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2021 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

# 
# Determine the PadoGrid environment base path. Default is "$HOME/Padogrid".
#
if [ "$PADOGRID_ENV_BASE_PATH" == "" ]; then
   if [ "$PADOGRID_HOME" == "" ]; then
      PADOGRID_ENV_BASE_PATH="$HOME/Padogrid"
   else
      PADOGRID_ENV_BASE_PATH="$(dirname $(dirname $PADOGRID_WORKSPACES_HOME))"
   fi
fi      

__options()
{
   echo "-?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Display installed product versions

SYNOPSIS
   $EXECUTABLE [-?]

DESCRIPTION
   Displays installed product versions with the current workspace versions highlighted.

EOF
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "change_version install_padogrid uninstall_product update_products" $EXECUTABLE
   exit
fi

function printVersionTree
{
   local index=0
   local PRODUCT_NAME=$1
   local VERSIONS=($2)
   local CURRENT_PRODUCT_VERSION=$3

   local len=${#VERSIONS[@]}
   local last last_index
   let last_index=len-1
   echo $PRODUCT_NAME
   if [ $len -eq 0 ]; then
      echo "└── (not installed)"
   else
      for i in ${VERSIONS[@]}; do
        if [ $index -lt $last_index ]; then
           if [ "$i" == "$CURRENT_PRODUCT_VERSION" ]; then
              echo -e "├── ${CLightGreen}$i${CNone}"
           else
              echo "├── $i"
           fi
        else
           if [ "$i" == "$CURRENT_PRODUCT_VERSION" ]; then
               echo -e "└── ${CLightGreen}$i${CNone}"
           else
              echo "└── $i"
           fi
        fi
        let index=index+1
      done
   fi
}

determineInstalledProductVersions

echo ""
echo "Products Directoy:"
echo "   $PADOGRID_ENV_BASE_PATH/products"
echo ""
echo "The following product versions are found in the products directory."
echo "(Java and Coeherence are not shown due to their independent installation locations.)"
echo ""
printVersionTree "PadoGrid" "$PADOGRID_VERSIONS" "$PADOGRID_VERSION"
echo ""
printVersionTree "Pado" "$PADO_VERSIONS" "$__PADO_VERSION"
echo ""
printVersionTree "PadoDesktop" "$PADODEKSTOP_VERSIONS" "$__PADODESKTOP_VERSION"
echo ""
printVersionTree "PadoWeb" "$PADOWEB_VERSIONS" "$__PADOWEB_VERSION"
echo ""
printVersionTree "GemFire" "$GEMFIRE_VERSIONS" "$__GEMFIRE_VERSION"
echo ""
printVersionTree "Geode" "$GEODE_VERSIONS" "$__GEODE_VERSION"
echo ""
printVersionTree "Hazelcast Enterprise" "$HAZELCAST_ENTERPRISE_VERSIONS" "$__HAZELCAST_ENTERPRISE_VERSION"
echo ""
printVersionTree "Hazelcast OSS" "$HAZELCAST_OSS_VERSIONS" "$__HAZELCAST_OSS_VERSION"
echo ""
printVersionTree "Hazelcast Management Center" "$HAZELCAST_MANAGEMENT_CENTER_VERSIONS" "$__HAZELCAST_MC_VERSION"
echo ""
printVersionTree "Hazelcast Desktop" "$HAZELCAST_DESKTOP_VERSIONS" "$__HAZELCAST_DESKTOP_VERSION"
echo ""
printVersionTree "Jet Enterprise" "$JET_ENTERPRISE_VERSIONS" "$__JET_ENTERPRISE_VERSION"
echo ""
printVersionTree "Jet OSS" "$JET_OSS_VERSIONS" "$__JET_OSS_VERSION"
echo ""
printVersionTree "Jet Management Center" "$JET_MANAGEMENT_CENTER_VERSIONS" "$__JET_MC_VERSION"
echo ""
printVersionTree "SnappyData" "$SNAPPYDATA_VERSIONS" "$__SNAPPYDATA_VERSION"
echo ""
printVersionTree "Spark" "$SPARK_VERSIONS" "$__SPARK_VERSION"
echo ""
printVersionTree "Hadoop" "$HADOOP_VERSIONS" "$__HADOOP_VERSION"
echo ""
echo -e "The ${CLightGreen}highlighted${CNone} ones are configured for the current workspace."
echo ""
