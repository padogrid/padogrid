#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2022 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-ip -port -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Open the current RWE JupyterLab workspace

SYNOPSIS
   $EXECUTABLE [-ip [ip_address]] [-port port_number] [-?]

DESCRIPTION
   Opens the current RWE JupyterLab workspace. It starts a Jupyter Notebook server if it is not
   running. If a Jupyter Notebook server is already running, then the '-ip' '-port' options are
   ignored.

OPTIONS
   -ip [ip_address]
             The IP address the notebook server will listen on.  If ip_address is not 
             specified then 0.0.0.0 is assigned. This option is ignored if the
             notebook server is already running. Default: 0.0.0.0

   -port [port_number]
             The port the notebook server will listen on. Default: 8888

EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -ip 0.0.0.0 -port 8888

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*jupyter* *vscode*" $EXECUTABLE
   exit
fi

if [ "$(which jupyter 2> /dev/null)" == "" ]; then
   echo >&2 -e "${CLightRed}ERROR:${CNone} jupyter executable not found. Command aborted."
   exit 1
fi
   
RWE_NAME=$(basename $PADOGRID_WORKSPACES_HOME)
WORKSPACE_NAME=$(basename $PADOGRID_WORKSPACE)

if [ "$IP_ADDRESS" == "" ]; then
   IP_ADDRESS="0.0.0.0"
fi

PORT_NUMBER="$PORT_ARG"
if [ "$PORT_NUMBER" == "" ]; then
   PORT_NUMBER="8888"
fi

JUPYTER_SERVERS=$(jupyter lab list | grep -v "Currently" | grep $PORT_NUMBER)

# Start the notebook server if is not running
if [ "$JUPYTER_SERVERS" == "" ]; then
   start_jupyter -dashboard $@
fi
RWE_URL=$(getJupyterUrl "workspace" $IP_ADDRESS $PORT_NUMBER)

if [ "$OS_NAME" == "DARWIN" ]; then
   open $RWE_URL
elif [ "$OS_NAME" == "CYGWIN" ]; then
   cygstart $RWE_URL
elif [[ -n "$IS_WSL" || -n "$WSL_DISTRO_NAME" ]]; then
   cmd.exe /C start $RWE_URL > /dev/null 2>&1
else
   BROWSER_OPEN_PATH=$(which xdg-open 2> /dev/null)
   if [ "$BROWSER_OPEN_PATH" == "" ]; then
      echo >&2 "ERROR: Unable to find the executable to open the default browser. Please install 'xdg-open'."
      echo >&2 "       Command aborted."
      exit 1
   else
      eval "$BROWSER_OPEN_PATH" $RWE_URL
   fi
fi
echo "The workspace in the Jupyter terminals may be incorrect due to JupyterLab limitations. Switch"
echo "into the current workspace by running the following command in each Jupyter terminal."
echo ""
echo -e "   ${CLightGreen}switch_rwe $RWE_NAME/$WORKSPACE_NAME${CNone}"
echo ""
