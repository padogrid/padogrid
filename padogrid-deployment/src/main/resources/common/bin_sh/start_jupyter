#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2022 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

__options()
{
   echo "-ip -port -dashboard -default -?"
}

if [ "$OPTIONS" == "true" ]; then
   __options
   exit
fi

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   $EXECUTABLE - Start a Jupyter server

SYNOPSIS
   $EXECUTABLE [-ip [ip_address]] [-port port_number] [-dashboard] [-default] [-?]

NOTES
   Jupyter commands are experimental and subject to change in future releases.

DESCRIPTION
   Starts a Jupyter server in the current RWE.
   
   This command starts a Jupyter server in the foreground due to the known Ctrl-C
   issue of Jupyter servers failing to pass Ctrl-C to child processes if they were
   started by scripts in the background. Ctrl-C is preserved, however, if this
   command is started in the background.
   
   To start the Jupyter server in the background, add '&' at the end of the command. 
   
   By default, the Jupyter Notebook server listens on 0.0.0.0. To bind to a specific
   IP address, use the '-ip' option. 

OPTIONS
   -ip [ip_address]
             The IP address the notebook server will listen on. Default: 0.0.0.0

   -port [port_number]
             The port the notebook server will listen on. Default: 8888

   -dashboard
             If specified, then it imports the dashboard for the current workspace. If this
             option is not specified, then it imports the JupyterLab's generic dashboard.

   -default
             If specified, then it sets the current PadoGrid workspace as the default
             JupyterLab workspace. The default JupyterLab workspace has no path in the
             URL, e.g., http://0.0.0.0:8888.


EOF
if [ "$MAN_SPECIFIED" == "false" ]; then
cat <<EOF
DEFAULT
   $EXECUTABLE -ip 0.0.0.0 -port 8888

EOF
fi
cat <<EOF
SEE ALSO
EOF
   printSeeAlsoList "*jupyter* *vscode*" $EXECUTABLE
   exit
fi

if [ "$(which jupyter 2> /dev/null)" == "" ]; then
   echo >&2 -e "${CError}ERROR:${CNone} jupyter executable not found. Command aborted."
   exit 1
fi

if [ "$IP_ADDRESS" == "" ]; then
   IP_ADDRESS="0.0.0.0"
fi

PORT_NUMBER="$PORT_ARG"
if [ "$PORT_NUMBER" == "" ]; then
   PORT_NUMBER="8888"
fi

NOTEBOOK_SERVERS=$(jupyter lab list | grep -v "Currently")

if [[ "$NOTEBOOK_SERVERS" == *"$PORT_NUMBER"* ]]; then
   echo >&2 -e "${CError}ERROR:${CNone} Notebook server already running. Command aborted."
   show_jupyter
   exit 1
fi

RWE_NAME=$(basename $PADOGRID_WORKSPACES_HOME)
JUPYTER_LOG_FILE=$HOME/.padogrid/workspaces/$RWE_NAME/jupyterlab-$PORT_NUMBER.log
if [ "$DASHBOARD_SPECIFIED" == "true" ]; then
   WORKSPACE_NAME=$(basename $PADOGRID_WORKSPACE)

   # Determine if the workspace exists - Not used.
   WORKSPACE_LAYOUT=$(jupyter lab workspaces export $RWE_NAME | grep layout)
   if [ "$WORKSPACE_LAYOUT" == "" ]; then
      NEW_WORKSPACE="true"
   else
      NEW_WORKSPACE="false"
   fi

   # Create the default Jupyter workspace using the template.
   JUPYTER_WORKSPACE_FILE="$PADOGRID_WORKSPACES_HOME/.jupyter/${WORKSPACE_NAME}.json"
   if [ ! -f "$JUPYTER_WORKSPACE_FILE" ]; then
      if [ ! -d "$PADOGRID_WORKSPACES_HOME/.jupyter" ]; then
         mkdir "$PADOGRID_WORKSPACES_HOME/.jupyter"
      fi
      sed -e "s/\${WORKSPACE}/${WORKSPACE_NAME}/g" \
          -e "s/\${RWE}/$RWE_NAME/g" \
          "$PADOGRID_HOME/etc/jupyter/template-jupyter-workspace.json" \
          > "$JUPYTER_WORKSPACE_FILE"
   fi

   # Import the workspace configuration file
   if [ -f "$JUPYTER_WORKSPACE_FILE" ]; then
      jupyter lab workspaces import "$JUPYTER_WORKSPACE_FILE"
   fi

   # Set default workspace
   if [ "$DEFAULT_SPECIFIED" == "true" ]; then
      DEFAULT_WORKSPACE_FILE="$PADOGRID_WORKSPACES_HOME/.jupyter/__default.json"
      sed -e "s/\${WORKSPACE}/${WORKSPACE_NAME}/g" \
          -e "s/\${RWE}/default/g" \
          "$PADOGRID_HOME/etc/jupyter/template-jupyter-workspace.json" \
          > "$DEFAULT_WORKSPACE_FILE"
      jupyter lab workspaces import "$DEFAULT_WORKSPACE_FILE"
   fi
fi

echo ""
echo "$EXECUTABLE: Starting Jupyter server..."
echo "$EXECUTABLE: This command will block unless started in the background."

echo "*********************************************************************" > $JUPYTER_LOG_FILE
echo "PadoGrid" >> $JUPYTER_LOG_FILE
echo "--------" >> $JUPYTER_LOG_FILE
echo "Copyright 2020-2022 Netcrest Technologies, LLC. All rights reserved." >> $JUPYTER_LOG_FILE
echo "" >> $JUPYTER_LOG_FILE
echo "Date: `date`" >> $JUPYTER_LOG_FILE
echo "" >> $JUPYTER_LOG_FILE
echo "Properties:" >> $JUPYTER_LOG_FILE
echo "dashboard-enabled=$DASHBOARD_SPECIFIED" >> $JUPYTER_LOG_FILE
echo "default-enabled=$DEFAULT_SPECIFIED" >> $JUPYTER_LOG_FILE
echo "*********************************************************************" >> $JUPYTER_LOG_FILE
echo "" >> $JUPYTER_LOG_FILE
pushd $PADOGRID_WORKSPACES_HOME > /dev/null 2>&1
nohup jupyter lab --no-browser --port=$PORT_NUMBER --ip=$IP_ADDRESS --LabApp.terminado_settings='{"shell_command": ["/bin/bash"]}' >> $JUPYTER_LOG_FILE 2>&1
popd > /dev/null 2>&1
