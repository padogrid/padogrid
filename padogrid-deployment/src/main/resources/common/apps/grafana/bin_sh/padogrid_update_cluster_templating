#!/usr/bin/env bash

# ========================================================================
# Copyright (c) 2020-2024 Netcrest Technologies, LLC. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# ========================================================================

SCRIPT_DIR="$(cd -P -- "$(dirname -- "$0")" && pwd -P)"
. $SCRIPT_DIR/.addonenv.sh

EXECUTABLE="`basename $0`"

if [ "$HELP" == "true" ]; then
cat <<EOF

WORKSPACE
   $PADOGRID_WORKSPACE

NAME
   ./$EXECUTABLE - Update all folders provided by PadoGrid

SYNOPSIS
   ./$EXECUTABLE [-label $ALLOWED_LABELS_HELP] [-editable] [-?]


DESCRIPTION
   Updates all folders included in PadoGrid by invoking 'update_cluster_templating'.
   This is a convenience command for updating the following folders provided by PadoGrid.

      - single: $SINGLE_FOLDERS
      - dual:   $DUAL_FOLDERS
      - all:    $ALL_FOLDERS

   -label $ALLOWED_LABELS_HELP
             The name of the Prometheus label to apply the cluster list filter. This
             label is typically introduced by Prometheus. For example, you can assign a
             list of target endpoints under the '$DEFAULT_LABEL' label as shown in the
             EXAMPLES section below. For Kubernetes, the 'namespace' label may be more
             approriate since all the members of a cluster start in the same
             namespace. Default: $DEFAULT_LABEL

   -editable
           If specified, then the dashboards are editable. Default: read-only

DEFAULT
   ./$EXECUTABLE -label $DEFAULT_LABEL

SEE ALSO
   update_cluster_templating(1)

EOF
exit
fi

if [[ "$ALLOWED_LABELS_HELP" != *"$LABEL"* ]]; then
   echo -e >&2 "${CError}ERROR:${CNone} Invalid label [$LABEL]. Allowed labels are $ALLOWED_LABELS_HELP. Command aborted."
   exit 1
fi

if [ "$SINGLE_FOLDERS" == "" ]; then
   echo "Single folders not available."
else
   for i in $SINGLE_FOLDERS; do
      ./update_cluster_templating -type single -folder $i "$@"
   done
fi
if [ "$DUAL_FOLDERS" == "" ]; then
   echo "Dual folders not available."
else
   for i in $DUAL_FOLDERS; do
      ./update_cluster_templating -type dual -folder $i "$@"
   done
fi
if [ "$ALL_FOLDERS" == "" ]; then
   echo "All folders not available."
else
   for i in $ALL_FOLDERS; do
      ./update_cluster_templating -type all -folder $i "$@"
   done
fi

