# The number of test runs. Each group has the member size set by the 
# 'memberSetSize' property. This means the total number of valid 
# legitimate transactions that return summary would be limited to
# the number of groups. Use this property to increase the number of
# transactions. Default: 1
testCount=1

# Interval between test runs in msec.
# Default: 0
testIntervalInMsec=0

# The number of members that belong to each group.
memberSetSize=5

# Map names separated by comma. Valid values are "eligibility" and "profile".
mapNames=eligibility,profile

# Print status interval in sec. The application prints status in this interval
# to the console. Default: 10 sec
printStatusIntervalInSec=10

# Turn off logging
redisson-addon.logging.type=none

# The key prefix prepended to their attributes.
prefix=x

# -------------------------------------------------------------------------
# There are two (2) maps supported: eligibility and profile. The following
# properties are used for both maps.
#
# totalEntryCount The total number of entries to ingest or transact per test.
#                 This number is divided by the number of threads to evenly
#                 distribute the number of entries per thread. The total number
#                 may be different from the this value.
# payloadSize     The value object size in bytes. The value object is a blob
#                 object containing the specified payload size in the form of
#                 a byte array. Note that the key objects are composite objects
#                 containing several attributes. This property is used for
#                 put and putall test cases only. Default: 1024
# batchSize       The number of objects per putAll() or getAll() call per thread.
#                 Default: 1000
# threadCount     The number of threads per test case.
#                 Default: (processor count * 1.5).
# testCase        Test case. Not that the 'tx' test case is available for 'eligibility' only.
#                 For ingestion, valid values are as follows:
#                    eligibility.testCase=putall|put  Default: putall
#                    profile.testCase=putall|put      Default: putall
#                 For tx, valid values are as follows:
#                    eligibility.testCase=getall|tx   Default: getall
#                    profile.testCase=getall|get      Default: getall
#                 If invalid values are entered then the default values are assigned.
# -------------------------------------------------------------------------

#
# ------------- ELIGIBILITY
#

# 10 mil 1KiB objects (total: >10GiB - keys additional)
#eligibility.totalEntryCount=10000000
#eligibility.payloadSize=1024
#eligibility.batchSize=1000
#eligibility.threadCount=16
#eligibility.testCase=putall

# 5 mil 1KiB objects (total: >5GiB - keys additional)
#eligibility.totalEntryCount=5000000
#eligibility.payloadSize=1024
#eligibility.batchSize=1000
#eligibility.threadCount=16
#eligibility.testCase=putall

# 2 mil 1KiB objects (total: >2GiB - keys additional)
#eligibility.totalEntryCount=2000000
#eligibility.payloadSize=1024
#eligibility.batchSize=1000
#eligibility.threadCount=16
#eligibility.testCase=putall

# 1 mil 1KiB objects (total: >1GiB - keys additional)
#eligibility.totalEntryCount=1000000
#eligibility.payloadSize=1024
#eligibility.batchSize=1000
#eligibility.threadCount=16
#eligibility.testCase=putall

# 100k 1KiB objects (total: >100MiB - keys additional)
#eligibility.totalEntryCount=100000
#eligibility.payloadSize=1024
#eligibility.batchSize=1000
#eligibility.threadCount=16
#eligibility.testCase=putall

# 10k 1KiB objects (total: >10MiB - keys additional)
eligibility.totalEntryCount=10000
eligibility.payloadSize=1024
eligibility.batchSize=1000
eligibility.threadCount=16
eligibility.testCase=putall

# 1000 1KiB objects (total: >1MiB - keys additional)
#eligibility.totalEntryCount=1000
#eligibility.payloadSize=1024
#eligibility.batchSize=100
#eligibility.threadCount=5
#eligibility.testCase=putall

#
# ------------- PROFILE
#

# 100k 10KiB objects (total: >10GiB - keys additional)
#profile.totalEntryCount=100000
#profile.payloadSize=10240
#profile.batchSize=100
#profile.threadCount=16
#profile.testCase=putall

# 200k 10KiB objects (total: >2GiB - keys additional)
#profile.totalEntryCount=200000
#profile.payloadSize=10240
#profile.batchSize=100
#profile.threadCount=16
#profile.testCase=putall

# 100k 10KiB objects (total: >1GiB - keys additional)
#profile.totalEntryCount=100000
#profile.payloadSize=10240
#profile.batchSize=100
#profile.threadCount=16
#profile.testCase=putall

# 10k 10KiB objects (total: >100MiB - keys additional)
profile.totalEntryCount=10000
profile.payloadSize=10240
profile.batchSize=100
profile.threadCount=16
profile.testCase=putall

# 1000 10KiB objects (total: >10MiB - keys additional)
#profile.totalEntryCount=1000
#profile.payloadSize=10240
#profile.batchSize=100
#profile.threadCount=16
#profile.testCase=putall

# 100 10KiB objects (total: >100KiB - keys additional)
#profile.totalEntryCount=100
#profile.payloadSize=10240
#profile.batchSize=100
#profile.threadCount=16
#profile.testCase=putall
